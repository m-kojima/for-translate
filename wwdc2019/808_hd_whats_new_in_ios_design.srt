1
00:00:00,506 --> 00:00:05,500
[ Music ]


2
00:00:12,796 --> 00:00:13,296
>> Hello.


3
00:00:14,516 --> 00:00:19,146
[ Applause ]


4
00:00:19,646 --> 00:00:20,446
I'm Mike Stern.


5
00:00:20,876 --> 00:00:22,816
I manage the Design and Platform


6
00:00:22,816 --> 00:00:24,806
Experience Evangelism Team here


7
00:00:24,806 --> 00:00:26,056
at Apple and it's my great


8
00:00:26,106 --> 00:00:27,416
pleasure to be with you today.


9
00:00:28,376 --> 00:00:30,026
All right, so let's kick things


10
00:00:30,026 --> 00:00:32,735
off with What's New in iOS


11
00:00:32,816 --> 00:00:33,246
Design.


12
00:00:34,066 --> 00:00:36,266
With iOS 13, the way that we


13
00:00:36,266 --> 00:00:38,566
design and build apps is going


14
00:00:38,566 --> 00:00:40,316
to change in some subtle but


15
00:00:40,376 --> 00:00:41,326
significant ways.


16
00:00:42,406 --> 00:00:44,386
Dark Mode brings a new approach


17
00:00:44,666 --> 00:00:46,096
to how we work with colors,


18
00:00:46,416 --> 00:00:47,886
images, and text.


19
00:00:48,776 --> 00:00:51,026
The new card style sheets not


20
00:00:51,026 --> 00:00:53,126
only present modal presentations


21
00:00:53,126 --> 00:00:54,776
in a different way, but they


22
00:00:54,776 --> 00:00:56,346
change how we interact with them


23
00:00:56,416 --> 00:00:56,916
as well.


24
00:00:57,856 --> 00:00:59,876
And the new contextual menu


25
00:00:59,876 --> 00:01:03,266
control makes it easy to quickly


26
00:01:03,266 --> 00:01:04,926
access contextually relevant


27
00:01:04,926 --> 00:01:06,696
functionality with ease.


28
00:01:07,066 --> 00:01:08,946
Now, between these three topics,


29
00:01:08,946 --> 00:01:10,016
we've got a lot of ground to


30
00:01:10,016 --> 00:01:12,286
cover, so let's dive in with


31
00:01:12,356 --> 00:01:12,876
Dark Mode.


32
00:01:14,336 --> 00:01:16,326
Now, last year we introduced


33
00:01:16,326 --> 00:01:19,196
Dark Mode on macOS and it was


34
00:01:19,196 --> 00:01:20,096
pretty popular.


35
00:01:20,796 --> 00:01:22,566
For many years, photo and video


36
00:01:22,566 --> 00:01:24,676
apps have used dark interfaces


37
00:01:24,936 --> 00:01:26,486
because they allow people to see


38
00:01:26,576 --> 00:01:28,896
photos and videos with clarity.


39
00:01:29,996 --> 00:01:31,656
Dark UIs are great for dark


40
00:01:31,656 --> 00:01:32,596
lighting conditions.


41
00:01:33,046 --> 00:01:35,136
It's much easier for our eyes to


42
00:01:35,136 --> 00:01:37,436
adjust between dark screen and


43
00:01:37,436 --> 00:01:38,786
the world around us.


44
00:01:39,526 --> 00:01:41,326
And functional reasons aside,


45
00:01:41,726 --> 00:01:43,486
some people just prefer dark


46
00:01:43,486 --> 00:01:45,336
interfaces as a matter of


47
00:01:45,456 --> 00:01:46,506
personal preference.


48
00:01:47,966 --> 00:01:50,366
Dark Mode on iOS uses a fully


49
00:01:50,366 --> 00:01:52,156
black background to provide


50
00:01:52,206 --> 00:01:54,576
maximal contrast with text and


51
00:01:54,576 --> 00:01:56,046
other foreground elements.


52
00:01:56,966 --> 00:01:58,666
Black backgrounds blend in


53
00:01:58,666 --> 00:01:59,906
seamlessly with the hardware


54
00:01:59,906 --> 00:02:02,326
bezel to make your UI feel more


55
00:02:02,326 --> 00:02:04,066
expansive and integrated with


56
00:02:04,066 --> 00:02:05,016
the hardware itself.


57
00:02:06,446 --> 00:02:08,675
In general, all of your apps


58
00:02:08,675 --> 00:02:10,235
should support Dark Mode.


59
00:02:10,866 --> 00:02:12,156
When the people using your app


60
00:02:12,156 --> 00:02:13,636
have set their device to be in


61
00:02:13,636 --> 00:02:15,466
Dark Mode, they'll expect your


62
00:02:15,466 --> 00:02:17,016
app to change as well.


63
00:02:18,026 --> 00:02:19,316
Now, supporting Dark Mode


64
00:02:19,316 --> 00:02:21,556
involves moving towards the


65
00:02:21,556 --> 00:02:24,446
updated iOS design system, which


66
00:02:24,446 --> 00:02:26,186
has been fully overhauled for


67
00:02:26,186 --> 00:02:27,166
iOS 13.


68
00:02:27,816 --> 00:02:28,866
Now, just so we're all on the


69
00:02:28,866 --> 00:02:30,836
same page, design system


70
00:02:30,836 --> 00:02:32,226
basically just means a set of


71
00:02:32,316 --> 00:02:35,366
parts like colors, fonts, and


72
00:02:35,366 --> 00:02:37,356
glyphs that work together in a


73
00:02:37,356 --> 00:02:39,116
logical and consistent manner.


74
00:02:40,176 --> 00:02:42,806
A rational-- excuse me-- and


75
00:02:42,806 --> 00:02:44,516
consistent design system helps


76
00:02:44,556 --> 00:02:46,586
people to learn and use apps


77
00:02:46,966 --> 00:02:47,586
with ease.


78
00:02:48,566 --> 00:02:50,136
By integrating with the iOS


79
00:02:50,216 --> 00:02:52,166
design system, your app will


80
00:02:52,296 --> 00:02:54,736
feel more familiar to people and


81
00:02:54,736 --> 00:02:55,916
be more understandable.


82
00:02:56,896 --> 00:02:58,336
Now, before we get into all of


83
00:02:58,336 --> 00:03:00,316
the details, I'd like to share


84
00:03:00,316 --> 00:03:01,906
some of the key design goals


85
00:03:02,206 --> 00:03:03,896
that guided the design team's


86
00:03:03,896 --> 00:03:04,356
efforts.


87
00:03:05,666 --> 00:03:07,636
First and foremost, they wanted


88
00:03:07,856 --> 00:03:09,886
iOS to remain familiar and


89
00:03:09,886 --> 00:03:10,506
intuitive.


90
00:03:11,376 --> 00:03:13,076
The iOS design system has


91
00:03:13,076 --> 00:03:14,846
received a complete makeover,


92
00:03:15,436 --> 00:03:16,996
but the end result is still


93
00:03:17,036 --> 00:03:18,436
recognizably iOS.


94
00:03:19,846 --> 00:03:21,886
They sought to provide more


95
00:03:21,886 --> 00:03:23,216
internal consistency.


96
00:03:23,856 --> 00:03:25,816
All of the built-in apps were


97
00:03:25,876 --> 00:03:27,606
redesigned to bring them into


98
00:03:27,606 --> 00:03:29,696
alignment with each other, using


99
00:03:29,696 --> 00:03:30,986
all of the components that we'll


100
00:03:30,986 --> 00:03:32,406
be talking about with you today.


101
00:03:33,716 --> 00:03:35,186
They also wanted the new design


102
00:03:35,186 --> 00:03:36,966
system to include a range of


103
00:03:36,996 --> 00:03:38,646
color options to help


104
00:03:38,646 --> 00:03:40,366
successfully articulate


105
00:03:40,636 --> 00:03:42,616
information hierarchy to allow


106
00:03:42,616 --> 00:03:44,336
the most important elements to


107
00:03:44,336 --> 00:03:46,656
be the strongest and the less


108
00:03:46,656 --> 00:03:48,156
important elements to recede.


109
00:03:49,456 --> 00:03:51,596
They also put accessibility on


110
00:03:51,596 --> 00:03:53,176
equal footing with these other


111
00:03:53,206 --> 00:03:53,676
goals.


112
00:03:54,476 --> 00:03:56,436
The new system fully supports


113
00:03:56,516 --> 00:03:58,716
bold text and the increased


114
00:03:58,716 --> 00:04:00,636
contrast accessibility modes.


115
00:04:01,926 --> 00:04:04,436
And, lastly, they wanted the new


116
00:04:04,436 --> 00:04:06,226
design system to be simple,


117
00:04:06,436 --> 00:04:08,296
straightforward, and easy to


118
00:04:08,296 --> 00:04:08,786
implement.


119
00:04:09,746 --> 00:04:10,056
All right.


120
00:04:10,516 --> 00:04:11,676
Now let's get into the


121
00:04:11,676 --> 00:04:12,226
specifics.


122
00:04:13,516 --> 00:04:15,196
Color seems like the right place


123
00:04:15,286 --> 00:04:15,626
to start.


124
00:04:16,776 --> 00:04:19,336
Every app has a background and


125
00:04:19,336 --> 00:04:21,856
most apps have text and glyphs.


126
00:04:22,596 --> 00:04:24,266
And some apps have separator


127
00:04:24,266 --> 00:04:27,686
lines and grouping boxes to help


128
00:04:27,686 --> 00:04:29,586
organize all of that content.


129
00:04:30,756 --> 00:04:31,716
Now, when describing these


130
00:04:31,716 --> 00:04:34,086
colors, we can naturally talk


131
00:04:34,086 --> 00:04:35,826
about them by their values.


132
00:04:36,396 --> 00:04:37,766
The text is black, the


133
00:04:37,766 --> 00:04:39,826
background is white, et cetera,


134
00:04:39,976 --> 00:04:40,506
et cetera.


135
00:04:41,476 --> 00:04:42,596
Now, as your interface gets a


136
00:04:42,596 --> 00:04:44,396
little bit more complicated, the


137
00:04:44,396 --> 00:04:45,726
length of that color palette


138
00:04:46,146 --> 00:04:46,726
extends.


139
00:04:47,346 --> 00:04:49,096
But that's not really an issue.


140
00:04:50,066 --> 00:04:51,946
However, when you add support


141
00:04:52,296 --> 00:04:54,706
for separate appearance, you now


142
00:04:54,706 --> 00:04:56,956
have two parallel sets of colors


143
00:04:57,416 --> 00:04:58,976
to keep in sync with each other


144
00:04:58,976 --> 00:04:59,506
and manage.


145
00:05:00,656 --> 00:05:01,906
At this point, it becomes


146
00:05:01,906 --> 00:05:03,946
helpful to think about color in


147
00:05:03,946 --> 00:05:05,586
a more abstract way.


148
00:05:06,536 --> 00:05:08,226
This is where semantic colors


149
00:05:08,226 --> 00:05:08,766
comes in.


150
00:05:10,156 --> 00:05:11,936
A semantic color describes the


151
00:05:12,046 --> 00:05:14,526
purpose of a color rather than


152
00:05:14,526 --> 00:05:15,836
what its value is.


153
00:05:17,066 --> 00:05:18,586
Because semantic colors are


154
00:05:18,586 --> 00:05:20,366
extracted away from their exact


155
00:05:20,366 --> 00:05:23,226
appearance, they can work both--


156
00:05:23,276 --> 00:05:24,356
they're dynamic.


157
00:05:25,296 --> 00:05:27,036
So, a background color can be


158
00:05:27,086 --> 00:05:29,316
black in Dark Mode and white in


159
00:05:29,316 --> 00:05:30,446
Light Mode.


160
00:05:31,136 --> 00:05:32,786
So, instead of maintaining two


161
00:05:32,786 --> 00:05:34,246
separate lists of colors for


162
00:05:34,276 --> 00:05:36,276
Light and Dark Modes, you can


163
00:05:36,276 --> 00:05:38,306
apply semantic colors from the


164
00:05:38,306 --> 00:05:40,216
system palette to UI elements


165
00:05:40,636 --> 00:05:41,566
and their appearance will


166
00:05:41,566 --> 00:05:43,286
automatically adapt between


167
00:05:43,286 --> 00:05:45,486
Light and Dark Modes, which is


168
00:05:45,546 --> 00:05:46,376
pretty convenient.


169
00:05:47,486 --> 00:05:49,696
iOS 13 includes a palette of


170
00:05:49,696 --> 00:05:51,436
semantic colors for you to use.


171
00:05:52,456 --> 00:05:53,696
Many of these colors have


172
00:05:53,786 --> 00:05:56,066
primary, secondary, tertiary,


173
00:05:56,316 --> 00:05:57,726
and quaternary values.


174
00:05:58,706 --> 00:06:00,156
These variants are used to


175
00:06:00,156 --> 00:06:02,016
express information hierarchy.


176
00:06:02,886 --> 00:06:04,256
Label color has the most


177
00:06:04,256 --> 00:06:06,136
contrast with the background, so


178
00:06:06,136 --> 00:06:07,176
it's going to advance into the


179
00:06:07,246 --> 00:06:08,366
foreground and grab your


180
00:06:08,366 --> 00:06:10,076
attention and should be used for


181
00:06:10,076 --> 00:06:11,826
primary elements like titles,


182
00:06:12,546 --> 00:06:14,526
secondary for subtitles,


183
00:06:14,556 --> 00:06:16,176
tertiary for placeholder text,


184
00:06:16,566 --> 00:06:18,636
quaternary for disabled text.


185
00:06:19,716 --> 00:06:21,506
The same basic principle applies


186
00:06:21,506 --> 00:06:22,626
to background colors.


187
00:06:23,346 --> 00:06:25,136
System background is the primary


188
00:06:25,136 --> 00:06:26,516
background color and it's pure


189
00:06:26,516 --> 00:06:27,886
white in Light Mode and pure


190
00:06:27,886 --> 00:06:28,916
black in Dark Mode.


191
00:06:29,546 --> 00:06:32,016
Secondary and tertiary system


192
00:06:32,016 --> 00:06:34,046
background colors allow you to


193
00:06:34,046 --> 00:06:35,466
structure information


194
00:06:35,546 --> 00:06:36,446
hierarchically.


195
00:06:37,436 --> 00:06:39,366
There's also a parallel set of


196
00:06:39,366 --> 00:06:40,806
background colors for grouped


197
00:06:40,946 --> 00:06:41,686
table views.


198
00:06:42,636 --> 00:06:44,286
Now, if you observe closely,


199
00:06:44,766 --> 00:06:46,006
you'll note that the colors


200
00:06:46,006 --> 00:06:47,856
aren't simply inverted between


201
00:06:47,856 --> 00:06:48,876
Light and Dark Modes.


202
00:06:49,546 --> 00:06:50,956
The table row backgrounds are


203
00:06:50,956 --> 00:06:51,916
lighter in both.


204
00:06:52,796 --> 00:06:54,206
There's a concerted effort to


205
00:06:54,206 --> 00:06:56,266
select a palette of colors that


206
00:06:56,266 --> 00:06:58,426
assure contrast while at the


207
00:06:58,426 --> 00:07:00,626
same time keeping apps looking


208
00:07:00,626 --> 00:07:02,416
similar between Light and Dark


209
00:07:02,416 --> 00:07:02,726
Modes.


210
00:07:04,266 --> 00:07:05,716
When you're designing for Dark


211
00:07:05,716 --> 00:07:07,366
Mode, it's often helpful to


212
00:07:07,366 --> 00:07:08,716
think about the lights as having


213
00:07:08,716 --> 00:07:10,336
been dimmed rather than


214
00:07:10,336 --> 00:07:11,976
everything being flipped inside


215
00:07:12,896 --> 00:07:12,966
out.


216
00:07:13,636 --> 00:07:15,806
The new system palette includes


217
00:07:15,806 --> 00:07:17,496
fill colors and separator


218
00:07:17,496 --> 00:07:17,926
colors.


219
00:07:18,616 --> 00:07:20,246
All of the fill colors and one


220
00:07:20,246 --> 00:07:21,466
of the separator colors are


221
00:07:21,466 --> 00:07:23,706
semitransparent, which helps


222
00:07:23,706 --> 00:07:25,646
them to contrast well against


223
00:07:25,786 --> 00:07:27,656
variable background colors.


224
00:07:28,936 --> 00:07:30,616
The new palette includes six


225
00:07:31,056 --> 00:07:32,756
fully opaque gray values.


226
00:07:33,286 --> 00:07:34,866
These colors are best used when


227
00:07:34,866 --> 00:07:36,016
transparency would lead to


228
00:07:36,076 --> 00:07:37,636
undesirable results.


229
00:07:38,306 --> 00:07:39,806
So, for example, when drawing


230
00:07:39,806 --> 00:07:41,166
intersecting grid lines,


231
00:07:41,736 --> 00:07:43,596
overlapping semitransparent


232
00:07:43,596 --> 00:07:45,446
colors can create distracting


233
00:07:45,676 --> 00:07:46,846
optical illusions.


234
00:07:47,806 --> 00:07:50,486
And, if elements overlap, solid


235
00:07:50,486 --> 00:07:52,256
colors are really helpful and


236
00:07:52,256 --> 00:07:53,466
prevent things from looking


237
00:07:53,696 --> 00:07:54,936
disabled or broken.


238
00:07:56,446 --> 00:07:58,126
These colors are used throughout


239
00:07:58,126 --> 00:07:59,496
the system for basically


240
00:07:59,666 --> 00:08:01,726
everything and we encourage you


241
00:08:01,726 --> 00:08:03,226
to use them in your apps.


242
00:08:04,116 --> 00:08:05,716
To get you started, you can


243
00:08:05,716 --> 00:08:07,626
check out the full color palette


244
00:08:07,626 --> 00:08:09,266
in the Apple Design Resources


245
00:08:09,536 --> 00:08:10,506
and the Human Interface


246
00:08:10,546 --> 00:08:11,136
Guidelines.


247
00:08:11,606 --> 00:08:13,126
I'll have more information about


248
00:08:13,126 --> 00:08:13,976
those at the end of the


249
00:08:13,976 --> 00:08:14,686
presentation.


250
00:08:15,826 --> 00:08:17,426
As before, we will continue to


251
00:08:17,426 --> 00:08:19,366
provide tint colors for you to


252
00:08:19,366 --> 00:08:21,046
use as your app's tint color.


253
00:08:21,566 --> 00:08:23,156
These tint colors are dynamic,


254
00:08:23,746 --> 00:08:25,226
meaning that they have variants


255
00:08:25,226 --> 00:08:26,956
for Light and Dark Modes.


256
00:08:28,446 --> 00:08:29,686
Each tint color has high


257
00:08:29,686 --> 00:08:31,506
contrast variance when the


258
00:08:31,506 --> 00:08:33,515
increase contrast accessibility


259
00:08:33,515 --> 00:08:34,905
setting is enabled.


260
00:08:36,385 --> 00:08:38,106
Tint colors get lighter in Dark


261
00:08:38,106 --> 00:08:40,976
Mode and darker in Light Mode.


262
00:08:42,356 --> 00:08:44,155
Now, if you opt to pick your own


263
00:08:44,155 --> 00:08:46,396
tint color, try to select colors


264
00:08:46,396 --> 00:08:47,926
that work well in both modes.


265
00:08:49,386 --> 00:08:50,856
A color that works well in Light


266
00:08:50,926 --> 00:08:52,266
Mode, though, might have


267
00:08:52,356 --> 00:08:54,576
insufficient contrast in Dark


268
00:08:54,576 --> 00:08:56,546
Mode and vice versa.


269
00:08:57,436 --> 00:08:59,216
Even when colors seem to you


270
00:08:59,216 --> 00:09:00,286
like they're going to work well


271
00:09:00,286 --> 00:09:02,456
in both modes, it's always best


272
00:09:02,456 --> 00:09:03,736
to check your colors with an


273
00:09:03,736 --> 00:09:05,226
online color contrast


274
00:09:05,226 --> 00:09:05,976
calculator.


275
00:09:06,696 --> 00:09:08,346
Now, because tint colors can be


276
00:09:08,346 --> 00:09:10,656
dynamic, you can have two


277
00:09:10,656 --> 00:09:12,336
slightly different colors for


278
00:09:12,336 --> 00:09:13,456
Light and Dark Modes.


279
00:09:13,946 --> 00:09:15,316
And when you're picking those


280
00:09:15,316 --> 00:09:17,706
colors, aim for a contrast ratio


281
00:09:17,706 --> 00:09:20,316
of 4.5:1 or higher.


282
00:09:21,596 --> 00:09:24,226
Strong color contrast improves


283
00:09:24,226 --> 00:09:26,256
the accessibility and usability


284
00:09:26,416 --> 00:09:27,226
of your apps.


285
00:09:28,836 --> 00:09:29,996
The system palette should


286
00:09:29,996 --> 00:09:31,626
basically have you covered for


287
00:09:31,626 --> 00:09:33,686
most of your needs, but of


288
00:09:33,686 --> 00:09:35,176
course you're going to have to


289
00:09:35,176 --> 00:09:36,906
define your own colors as well.


290
00:09:37,666 --> 00:09:39,566
Perhaps you have user selectable


291
00:09:39,566 --> 00:09:41,286
label colors or status


292
00:09:41,286 --> 00:09:41,906
indicators.


293
00:09:42,696 --> 00:09:44,496
As with tint colors, any color


294
00:09:44,496 --> 00:09:45,276
can be dynamic.


295
00:09:46,236 --> 00:09:47,816
Given that the perception of


296
00:09:47,816 --> 00:09:49,396
color is influenced by the


297
00:09:49,456 --> 00:09:50,486
background that it's shown


298
00:09:50,486 --> 00:09:52,476
against, you'll want to make


299
00:09:52,476 --> 00:09:54,426
some adjustments to help keep


300
00:09:54,466 --> 00:09:55,946
those color values looking


301
00:09:56,026 --> 00:09:58,616
similar between modes or to make


302
00:09:58,616 --> 00:09:59,596
sure that there's enough


303
00:09:59,656 --> 00:10:01,406
contrast in both modes.


304
00:10:03,086 --> 00:10:04,286
Now, all this time I've been


305
00:10:04,286 --> 00:10:05,846
talking about Light and Dark


306
00:10:05,896 --> 00:10:07,886
Modes and, as you may know,


307
00:10:07,886 --> 00:10:08,826
that's a little bit of an


308
00:10:08,826 --> 00:10:10,026
oversimplification.


309
00:10:10,396 --> 00:10:12,166
There's actually two sets of


310
00:10:12,166 --> 00:10:13,496
background colors that are


311
00:10:13,496 --> 00:10:15,766
called Base and Elevated.


312
00:10:16,936 --> 00:10:18,846
As the names imply, these


313
00:10:18,846 --> 00:10:20,506
background colors are about


314
00:10:20,506 --> 00:10:21,986
layering interfaces.


315
00:10:23,186 --> 00:10:25,196
When two light interfaces are


316
00:10:25,196 --> 00:10:27,616
layered, a simple diffuse drop


317
00:10:27,616 --> 00:10:29,186
shadow is all that you need to


318
00:10:29,186 --> 00:10:31,256
create visual separation between


319
00:10:31,256 --> 00:10:31,706
the two.


320
00:10:32,446 --> 00:10:34,406
With dark interfaces, drop


321
00:10:34,406 --> 00:10:36,036
shadows are slightly less


322
00:10:36,036 --> 00:10:36,636
effective.


323
00:10:39,136 --> 00:10:40,626
System background colors will


324
00:10:40,626 --> 00:10:43,006
use the darker or base values


325
00:10:43,006 --> 00:10:44,316
for background apps or


326
00:10:44,316 --> 00:10:46,306
interfaces and the lighter


327
00:10:46,306 --> 00:10:48,036
elevated values for apps or


328
00:10:48,036 --> 00:10:49,816
interfaces that are in the


329
00:10:49,816 --> 00:10:50,346
foreground.


330
00:10:51,206 --> 00:10:52,666
So, take for example the


331
00:10:52,666 --> 00:10:53,456
Contacts app.


332
00:10:53,926 --> 00:10:55,526
It's using the base set of color


333
00:10:55,526 --> 00:10:57,086
values when drawn on its own,


334
00:10:57,576 --> 00:10:59,016
but when the same interface is


335
00:10:59,046 --> 00:11:00,086
brought up in a modal


336
00:11:00,086 --> 00:11:01,746
presentation in the Phone app,


337
00:11:02,136 --> 00:11:04,046
it uses the elevated background


338
00:11:04,046 --> 00:11:04,436
colors.


339
00:11:05,426 --> 00:11:06,696
OK. Let's look at a slightly


340
00:11:06,696 --> 00:11:07,986
more complicated example.


341
00:11:08,596 --> 00:11:10,736
Here's Mail running on an iPad.


342
00:11:11,086 --> 00:11:13,626
On its own, Mail is drawn using


343
00:11:13,626 --> 00:11:15,026
the base set of background


344
00:11:15,026 --> 00:11:15,426
colors.


345
00:11:16,526 --> 00:11:18,036
When we bring in Contacts in a


346
00:11:18,036 --> 00:11:19,776
slide-over, we see that it's


347
00:11:19,776 --> 00:11:21,296
being drawn with the elevated


348
00:11:21,296 --> 00:11:22,656
set of background colors.


349
00:11:23,386 --> 00:11:25,926
Now, the lighter appearance of


350
00:11:25,926 --> 00:11:28,136
Contacts helps it stand out from


351
00:11:28,136 --> 00:11:30,106
Mail and advances it into the


352
00:11:30,106 --> 00:11:30,726
foreground.


353
00:11:31,326 --> 00:11:34,636
When Contacts is displayed side


354
00:11:34,636 --> 00:11:36,446
by side in multitasking with


355
00:11:36,446 --> 00:11:38,536
Mail, they are both drawn with


356
00:11:38,616 --> 00:11:40,006
the elevated set of background


357
00:11:40,006 --> 00:11:40,476
colors.


358
00:11:40,896 --> 00:11:42,776
This helps provide contrast with


359
00:11:42,776 --> 00:11:44,426
that splitter down the middle


360
00:11:44,426 --> 00:11:46,416
and keeps the two apps from


361
00:11:46,416 --> 00:11:47,766
blending together.


362
00:11:47,766 --> 00:11:51,146
When we compose an email in


363
00:11:51,146 --> 00:11:52,626
Mail, it comes up in a sheet.


364
00:11:53,286 --> 00:11:54,726
This too is drawn with the


365
00:11:54,726 --> 00:11:57,226
elevated background colors, but


366
00:11:57,226 --> 00:11:58,956
the main app UI in Mail looks a


367
00:11:58,956 --> 00:12:00,876
little bit darker because modal


368
00:12:00,876 --> 00:12:03,076
presentations draw an overlay


369
00:12:03,076 --> 00:12:04,636
layer to dim their background


370
00:12:04,636 --> 00:12:07,386
contents and they cast a little


371
00:12:07,386 --> 00:12:09,366
bit of a drop shadow.


372
00:12:09,516 --> 00:12:11,026
Now, because background colors


373
00:12:11,026 --> 00:12:12,196
change when your app is


374
00:12:12,196 --> 00:12:14,346
elevated, you have to be mindful


375
00:12:14,346 --> 00:12:15,906
that some of the darker colors


376
00:12:15,936 --> 00:12:17,216
that you might use, even from


377
00:12:17,216 --> 00:12:18,806
the system palette, may not


378
00:12:18,806 --> 00:12:19,776
contrast well.


379
00:12:20,176 --> 00:12:21,766
You always have to check your


380
00:12:21,766 --> 00:12:24,396
designs when they're in elevated


381
00:12:24,396 --> 00:12:24,746
state.


382
00:12:26,266 --> 00:12:28,496
Again, semi-opaque fill and


383
00:12:28,496 --> 00:12:29,926
separator colors are going to be


384
00:12:29,926 --> 00:12:30,926
your best friends here.


385
00:12:31,546 --> 00:12:33,076
They adapt gracefully between


386
00:12:33,076 --> 00:12:35,146
base and elevated backgrounds.


387
00:12:36,246 --> 00:12:39,156
OK. Moving on to materials.


388
00:12:40,186 --> 00:12:41,976
Materials have been overhauled


389
00:12:41,976 --> 00:12:43,916
and refined with iOS 13.


390
00:12:44,526 --> 00:12:46,156
There are now four materials for


391
00:12:46,156 --> 00:12:48,086
you to choose from with a range


392
00:12:48,086 --> 00:12:51,056
of translucency levels; thick,


393
00:12:51,056 --> 00:12:53,406
regular, thin, and ultrathin.


394
00:12:54,506 --> 00:12:55,686
These materials have been


395
00:12:55,686 --> 00:12:57,846
designed well-- designed to work


396
00:12:57,846 --> 00:12:59,246
well against a variety of


397
00:12:59,316 --> 00:13:00,446
background contexts.


398
00:13:01,406 --> 00:13:02,726
Their appearance will change


399
00:13:02,726 --> 00:13:05,006
dynamically based on whether


400
00:13:05,006 --> 00:13:06,346
someone is using your app in


401
00:13:06,346 --> 00:13:07,416
Light or Dark Mode.


402
00:13:08,156 --> 00:13:09,576
You can select which material


403
00:13:09,576 --> 00:13:10,806
you want based on how much


404
00:13:10,886 --> 00:13:12,546
separation you want from the


405
00:13:12,546 --> 00:13:13,206
background.


406
00:13:13,576 --> 00:13:15,146
How much is most appropriate.


407
00:13:16,186 --> 00:13:18,036
The default material is regular


408
00:13:18,036 --> 00:13:19,556
and it's going to work well in


409
00:13:19,556 --> 00:13:21,936
most circumstances, but if


410
00:13:21,936 --> 00:13:23,096
you're presenting content


411
00:13:23,556 --> 00:13:25,416
against this material that needs


412
00:13:25,416 --> 00:13:26,726
a little bit more contrast, you


413
00:13:26,726 --> 00:13:28,286
can use the thicker material.


414
00:13:29,326 --> 00:13:30,916
For lighter weight interactions,


415
00:13:30,916 --> 00:13:32,436
maybe with simpler contents,


416
00:13:33,246 --> 00:13:35,286
thin and ultrathin might be the


417
00:13:35,286 --> 00:13:35,816
way to go.


418
00:13:36,326 --> 00:13:37,816
Which material is right for your


419
00:13:37,816 --> 00:13:38,006
app?


420
00:13:38,356 --> 00:13:39,506
Just really depends on the


421
00:13:39,506 --> 00:13:40,966
content that's being displayed


422
00:13:41,286 --> 00:13:42,976
inside of it.


423
00:13:43,086 --> 00:13:45,126
Speaking of which, light and


424
00:13:45,126 --> 00:13:46,126
dark materials have an


425
00:13:46,126 --> 00:13:47,756
accompanying set of vibrancy


426
00:13:47,756 --> 00:13:50,056
values for labels, fills, and


427
00:13:50,056 --> 00:13:51,096
separator colors.


428
00:13:51,796 --> 00:13:53,386
Vibrancy is a visual effect


429
00:13:53,456 --> 00:13:55,406
that's used throughout iOS and


430
00:13:55,406 --> 00:13:56,726
other Apple platforms.


431
00:13:57,526 --> 00:13:59,166
With system materials, it's


432
00:13:59,266 --> 00:14:01,316
typically best to use vibrancy


433
00:14:01,676 --> 00:14:03,136
rather than solid colors


434
00:14:03,776 --> 00:14:04,736
because, depending on the


435
00:14:04,736 --> 00:14:07,306
background context, solid colors


436
00:14:07,306 --> 00:14:09,086
can get really muddy and can


437
00:14:09,086 --> 00:14:11,476
lead to some serious legibility


438
00:14:11,476 --> 00:14:11,946
issues.


439
00:14:13,046 --> 00:14:14,756
Vibrancy helps to maintain that


440
00:14:14,756 --> 00:14:16,696
contrast, regardless of what's


441
00:14:16,696 --> 00:14:17,346
in the background.


442
00:14:18,496 --> 00:14:20,256
The updated visual design system


443
00:14:20,256 --> 00:14:22,656
for iOS also includes changes to


444
00:14:22,656 --> 00:14:24,826
controls and bars.


445
00:14:26,276 --> 00:14:28,626
Visual attributes like shape and


446
00:14:28,626 --> 00:14:30,596
color have been brought into


447
00:14:30,996 --> 00:14:32,406
greater alignment for more


448
00:14:32,406 --> 00:14:34,436
internal consistency.


449
00:14:35,196 --> 00:14:36,686
Controls are now drawn with


450
00:14:36,776 --> 00:14:38,746
semantic colors so that they


451
00:14:38,746 --> 00:14:40,656
gracefully adapt between Light


452
00:14:40,656 --> 00:14:41,936
and Dark Modes.


453
00:14:43,426 --> 00:14:45,806
If you use UIkit controls, you


454
00:14:45,806 --> 00:14:47,376
get the benefits of all of this


455
00:14:47,376 --> 00:14:47,876
for free.


456
00:14:48,926 --> 00:14:50,866
If you spent time recreating


457
00:14:50,866 --> 00:14:52,566
what UIkit gives you for free


458
00:14:52,946 --> 00:14:55,046
with custom controls, you may


459
00:14:55,046 --> 00:14:57,266
want to-- I don't know how to


460
00:14:57,266 --> 00:14:58,426
say this, but stop doing that.


461
00:14:59,516 --> 00:15:01,516
[ Laughter ]


462
00:15:02,516 --> 00:15:05,096
[ Applause ]


463
00:15:05,596 --> 00:15:08,816
Recreating what UIkit gives you


464
00:15:08,856 --> 00:15:10,986
for free takes a lot of effort


465
00:15:10,986 --> 00:15:12,476
and time, it's hard to do right,


466
00:15:12,476 --> 00:15:14,226
and there is very little upside


467
00:15:14,276 --> 00:15:14,626
for you.


468
00:15:15,896 --> 00:15:18,156
But, of course, custom controls


469
00:15:18,156 --> 00:15:19,366
are often necessary.


470
00:15:19,706 --> 00:15:21,096
UIkit does not provide


471
00:15:21,096 --> 00:15:22,406
everything that you need.


472
00:15:22,916 --> 00:15:24,236
For example, UIkit doesn't


473
00:15:24,236 --> 00:15:25,636
provide a rating indicator.


474
00:15:26,116 --> 00:15:27,356
So, when you're making custom


475
00:15:27,356 --> 00:15:29,546
controls, you should use the


476
00:15:29,546 --> 00:15:31,666
system palette so that you don't


477
00:15:31,666 --> 00:15:32,976
have to do two different color


478
00:15:32,976 --> 00:15:34,366
treatments for Light and Dark


479
00:15:34,456 --> 00:15:34,806
Mode.


480
00:15:36,276 --> 00:15:38,366
Navigation bars have also been


481
00:15:38,366 --> 00:15:39,016
updated.


482
00:15:39,596 --> 00:15:41,136
By default, they're now drawn


483
00:15:41,536 --> 00:15:42,996
for large titles without the


484
00:15:42,996 --> 00:15:44,776
background and shadow.


485
00:15:45,906 --> 00:15:48,186
This allows the title to connect


486
00:15:48,466 --> 00:15:50,226
seamlessly with the content that


487
00:15:50,226 --> 00:15:51,016
it's labeling.


488
00:15:51,606 --> 00:15:54,176
When content scrolls underneath


489
00:15:54,216 --> 00:15:55,616
the navigation bar, the


490
00:15:55,616 --> 00:15:57,186
background and shadow will fade


491
00:15:57,186 --> 00:15:57,716
back in.


492
00:15:58,806 --> 00:16:00,206
Now, large title bars--


493
00:16:00,676 --> 00:16:02,456
navigation bars work especially


494
00:16:02,456 --> 00:16:03,816
well with this visual treatment,


495
00:16:04,406 --> 00:16:05,846
but it can be used for default


496
00:16:05,846 --> 00:16:07,206
navigation bars as well.


497
00:16:07,936 --> 00:16:08,996
So, in the Settings app, for


498
00:16:08,996 --> 00:16:10,946
example, the master views


499
00:16:10,946 --> 00:16:12,596
navigation bar uses a large


500
00:16:12,596 --> 00:16:14,596
title and it has no background


501
00:16:14,596 --> 00:16:15,196
or shadow.


502
00:16:16,166 --> 00:16:18,236
The standard navigation bar is


503
00:16:18,236 --> 00:16:19,816
stylized to match.


504
00:16:20,936 --> 00:16:22,606
Now, while a seamless navigation


505
00:16:22,606 --> 00:16:24,786
bar looks great, it's not always


506
00:16:24,786 --> 00:16:26,036
going to be appropriate.


507
00:16:26,666 --> 00:16:28,296
That background is completely


508
00:16:28,296 --> 00:16:29,646
transparent, so if you've tucked


509
00:16:29,646 --> 00:16:30,646
anything underneath the


510
00:16:30,646 --> 00:16:32,116
navigation bar, it's going to


511
00:16:32,116 --> 00:16:33,956
show right through and it's


512
00:16:34,176 --> 00:16:35,176
probably not going to look very


513
00:16:35,176 --> 00:16:37,426
good, so don't use the treatment


514
00:16:37,426 --> 00:16:37,746
then.


515
00:16:38,306 --> 00:16:39,926
And if you have a really dense


516
00:16:39,926 --> 00:16:40,896
interface with a lot of


517
00:16:40,896 --> 00:16:42,556
controls, a navigation bar next


518
00:16:42,556 --> 00:16:44,576
to the content area, the clear


519
00:16:44,576 --> 00:16:46,306
visual delineation that's


520
00:16:46,306 --> 00:16:48,096
provided by that shadow can be


521
00:16:48,096 --> 00:16:48,766
really helpful.


522
00:16:49,616 --> 00:16:51,876
OK. So, before we move on,


523
00:16:52,136 --> 00:16:53,606
there's one more big feature


524
00:16:53,606 --> 00:16:54,716
that I'd like to discuss with


525
00:16:54,746 --> 00:16:58,016
you related to Dark Mode.


526
00:16:58,016 --> 00:16:59,596
iOS has always provided a


527
00:16:59,596 --> 00:17:01,516
handful of symbols for things


528
00:17:01,516 --> 00:17:03,256
like table rows and tool bars.


529
00:17:04,256 --> 00:17:05,286
When shown against a dark


530
00:17:05,286 --> 00:17:07,276
background, the previous set of


531
00:17:07,276 --> 00:17:09,106
symbols did not hold up very


532
00:17:09,106 --> 00:17:09,346
well.


533
00:17:10,016 --> 00:17:11,695
They often looked a little too


534
00:17:11,796 --> 00:17:14,465
thin, so the design team


535
00:17:14,816 --> 00:17:17,326
redesigned all of the symbols in


536
00:17:17,326 --> 00:17:18,346
this design system.


537
00:17:19,205 --> 00:17:21,076
And what's really cool, as many


538
00:17:21,076 --> 00:17:22,786
of you may know already, we're


539
00:17:22,786 --> 00:17:24,195
making all of those glyphs


540
00:17:24,195 --> 00:17:26,175
available for you to use with SF


541
00:17:26,576 --> 00:17:26,906
Symbols.


542
00:17:28,096 --> 00:17:30,856
SF Symbols includes over 1500


543
00:17:30,856 --> 00:17:31,286
symbols.


544
00:17:32,186 --> 00:17:34,046
And this isn't just a new set of


545
00:17:34,126 --> 00:17:34,606
glyphs.


546
00:17:35,236 --> 00:17:37,256
This represents a completely new


547
00:17:37,256 --> 00:17:39,596
way to think about and design


548
00:17:39,796 --> 00:17:40,256
glyphs.


549
00:17:41,246 --> 00:17:43,446
As the name suggests, SF Symbols


550
00:17:43,446 --> 00:17:45,556
are designed to match the visual


551
00:17:45,556 --> 00:17:47,586
design characteristics of San


552
00:17:47,636 --> 00:17:50,156
Francisco, the system font for


553
00:17:50,156 --> 00:17:52,406
iOS and other Apple platforms.


554
00:17:53,566 --> 00:17:55,386
They can literally be typed out


555
00:17:55,636 --> 00:17:57,546
so that they can be displayed in


556
00:17:57,546 --> 00:17:58,526
line with text.


557
00:17:59,266 --> 00:18:00,826
They have embedded baseline


558
00:18:00,826 --> 00:18:03,036
values to assure proper vertical


559
00:18:03,036 --> 00:18:04,626
alignment relative to text.


560
00:18:05,466 --> 00:18:07,006
And every SF Symbol offers


561
00:18:07,006 --> 00:18:09,816
small, medium, and large scale


562
00:18:09,816 --> 00:18:11,636
variants relative to the current


563
00:18:11,636 --> 00:18:13,686
size for different contexts.


564
00:18:14,846 --> 00:18:16,546
And every symbol comes in nine


565
00:18:16,546 --> 00:18:18,466
weights, just like the SF font.


566
00:18:19,436 --> 00:18:21,566
Because they're vector-based, SF


567
00:18:21,566 --> 00:18:24,416
Symbols can scale with text when


568
00:18:24,416 --> 00:18:27,306
used with Dynamic Type.


569
00:18:27,526 --> 00:18:29,566
And, by offering multiple


570
00:18:29,566 --> 00:18:31,356
weights, SF Symbols will become


571
00:18:31,356 --> 00:18:33,436
bolder when the bold text


572
00:18:33,526 --> 00:18:34,986
accessibility setting is


573
00:18:34,986 --> 00:18:35,436
enabled.


574
00:18:36,746 --> 00:18:38,516
Now, when designing comps of


575
00:18:38,516 --> 00:18:40,916
your app, you can use the new SF


576
00:18:41,076 --> 00:18:42,806
Symbols app to browse or search


577
00:18:42,806 --> 00:18:44,846
for symbols, copy the ones that


578
00:18:44,846 --> 00:18:46,856
you want to use, go over to your


579
00:18:46,856 --> 00:18:49,026
design comp, and just past them


580
00:18:49,236 --> 00:18:50,266
into a text layer.


581
00:18:50,266 --> 00:18:53,386
The updated iOS Apple Design


582
00:18:53,426 --> 00:18:55,696
Resources for Sketch is already


583
00:18:55,696 --> 00:18:57,276
set up to work with symbols.


584
00:18:58,246 --> 00:18:59,616
To swap out the symbols for this


585
00:18:59,656 --> 00:19:01,906
tab bar, for example, you just


586
00:19:02,126 --> 00:19:04,286
select the tab bar, go to the


587
00:19:04,286 --> 00:19:06,846
inspector, and paste it into an


588
00:19:06,846 --> 00:19:08,296
override for the buttons.


589
00:19:09,516 --> 00:19:10,466
I've been playing with this


590
00:19:10,466 --> 00:19:12,826
feature for a few months now and


591
00:19:12,826 --> 00:19:14,716
I have to tell you it's totally


592
00:19:14,716 --> 00:19:15,506
game-changing.


593
00:19:16,536 --> 00:19:17,886
Now, if the set of symbols that


594
00:19:17,956 --> 00:19:19,806
we provide, 1500, isn't enough,


595
00:19:20,236 --> 00:19:21,426
you can actually generate a


596
00:19:21,426 --> 00:19:23,276
template in SVG, go into


597
00:19:23,276 --> 00:19:25,126
Illustrator or Sketch and make


598
00:19:25,126 --> 00:19:26,806
modifications to design your own


599
00:19:26,936 --> 00:19:28,516
and get all of the same benefits


600
00:19:28,736 --> 00:19:29,686
that I just described.


601
00:19:30,316 --> 00:19:31,136
It's really cool.


602
00:19:32,136 --> 00:19:35,076
OK. Now, moving on to modal


603
00:19:35,076 --> 00:19:35,836
presentations.


604
00:19:37,086 --> 00:19:38,726
Modal presentations are often


605
00:19:38,726 --> 00:19:40,646
called sheets because of the way


606
00:19:40,646 --> 00:19:42,556
they slide up over the screen.


607
00:19:43,236 --> 00:19:44,996
This animation informs people


608
00:19:45,226 --> 00:19:46,636
that they've shifted from one


609
00:19:46,636 --> 00:19:49,416
mode to another or into a new


610
00:19:49,416 --> 00:19:50,836
modality of your app.


611
00:19:52,096 --> 00:19:54,936
With iOS 13, sheets have a new


612
00:19:55,006 --> 00:19:57,276
card-like appearance that's used


613
00:19:57,276 --> 00:19:58,196
throughout the system.


614
00:19:58,996 --> 00:20:00,666
This style is now the default


615
00:20:00,666 --> 00:20:03,576
and the benefit of this style is


616
00:20:03,576 --> 00:20:05,036
that it gives this little peek


617
00:20:05,036 --> 00:20:06,246
of what's in the background,


618
00:20:06,756 --> 00:20:08,626
which is a helpful reminder that


619
00:20:08,626 --> 00:20:10,416
there's a different UI that


620
00:20:10,416 --> 00:20:12,146
accommodates a different task or


621
00:20:12,146 --> 00:20:13,556
mode of the app that's still in


622
00:20:13,556 --> 00:20:14,176
the background.


623
00:20:15,036 --> 00:20:17,036
With a full-screen modal sheet,


624
00:20:17,416 --> 00:20:18,766
you can sometimes forget what


625
00:20:18,766 --> 00:20:19,826
you were doing before.


626
00:20:20,376 --> 00:20:23,296
Card-style modal sheets can be


627
00:20:23,296 --> 00:20:24,886
dismissed by swiping down


628
00:20:24,946 --> 00:20:27,126
anywhere on the screen and that


629
00:20:27,126 --> 00:20:28,456
dismiss gesture is often going


630
00:20:28,456 --> 00:20:29,546
to be easier than tapping a


631
00:20:29,546 --> 00:20:31,486
button in the navigation bar.


632
00:20:32,796 --> 00:20:34,206
As with swiping to go back,


633
00:20:34,696 --> 00:20:35,936
pulling down to dismiss


634
00:20:36,226 --> 00:20:37,696
facilitates one-handed


635
00:20:37,696 --> 00:20:39,986
operation, which is particularly


636
00:20:39,986 --> 00:20:41,286
convenient on devices with


637
00:20:41,286 --> 00:20:42,136
larger displays.


638
00:20:43,196 --> 00:20:44,936
Now, you may wonder how does


639
00:20:44,996 --> 00:20:46,206
this work with scrolling.


640
00:20:47,126 --> 00:20:48,556
When the content area has been


641
00:20:48,556 --> 00:20:50,746
scrolled, swiping down will


642
00:20:50,746 --> 00:20:52,036
scroll it back to the top.


643
00:20:52,706 --> 00:20:53,746
When scrolled all the way back


644
00:20:53,826 --> 00:20:55,676
to the top, continuing to swipe


645
00:20:55,836 --> 00:20:57,446
will dismiss the modal


646
00:20:57,446 --> 00:20:58,146
presentation.


647
00:20:59,466 --> 00:21:01,346
But at any time, you can pull


648
00:21:01,346 --> 00:21:02,536
down from the top edge of the


649
00:21:02,536 --> 00:21:03,766
card to dismiss.


650
00:21:05,006 --> 00:21:06,636
Now, if this gesture is


651
00:21:06,666 --> 00:21:08,726
problematic for any reason, like


652
00:21:08,726 --> 00:21:09,756
you have a control in the


653
00:21:09,756 --> 00:21:11,676
content area that works with


654
00:21:11,676 --> 00:21:13,636
vertical swiping, it can be


655
00:21:13,766 --> 00:21:14,356
prevented.


656
00:21:15,476 --> 00:21:17,266
It can also be prevented when


657
00:21:17,266 --> 00:21:18,796
there's a mandatory decision


658
00:21:19,066 --> 00:21:20,736
that's required in the modal


659
00:21:20,736 --> 00:21:22,016
presentation itself.


660
00:21:22,776 --> 00:21:24,296
So, for example, here we either


661
00:21:24,296 --> 00:21:26,086
need to cancel or add.


662
00:21:27,276 --> 00:21:28,696
And if we pull down, it'll just


663
00:21:28,736 --> 00:21:31,536
bounce right back.


664
00:21:31,536 --> 00:21:33,146
In cases where people must make


665
00:21:33,146 --> 00:21:34,626
a decision before leaving a


666
00:21:34,626 --> 00:21:36,886
modal context, you can prevent


667
00:21:36,886 --> 00:21:39,296
that dismiss gesture and display


668
00:21:39,296 --> 00:21:40,956
an action sheet asking people


669
00:21:40,956 --> 00:21:43,186
how they wish to proceed, which


670
00:21:43,186 --> 00:21:44,676
is actually pretty convenient.


671
00:21:45,866 --> 00:21:47,206
Now, in case you're wondering,


672
00:21:47,586 --> 00:21:48,346
all of what I have just


673
00:21:48,346 --> 00:21:49,606
described here doesn't mean that


674
00:21:49,606 --> 00:21:51,456
you don't need to have buttons


675
00:21:51,966 --> 00:21:53,566
for modal cards anymore.


676
00:21:54,406 --> 00:21:55,896
Buttons are critical for letting


677
00:21:55,896 --> 00:21:57,496
people know that they can close


678
00:21:57,496 --> 00:21:58,086
the modal.


679
00:21:58,666 --> 00:21:59,966
Buttons are also necessary for


680
00:21:59,966 --> 00:22:02,286
accessibility reasons and people


681
00:22:02,286 --> 00:22:03,926
might not be familiar with using


682
00:22:03,926 --> 00:22:05,446
the gesture yet or don't want


683
00:22:05,446 --> 00:22:05,606
to.


684
00:22:06,196 --> 00:22:07,246
And when the content area has


685
00:22:07,246 --> 00:22:08,626
been scrolled down, tapping a


686
00:22:08,626 --> 00:22:09,876
button might actually be more


687
00:22:09,876 --> 00:22:10,456
convenient.


688
00:22:11,546 --> 00:22:13,766
Similarly, seeing negative and


689
00:22:13,766 --> 00:22:15,366
affirmative action pairs at the


690
00:22:15,516 --> 00:22:17,306
top of the screen lets people


691
00:22:17,306 --> 00:22:19,126
know what choices they have to


692
00:22:19,126 --> 00:22:20,826
act within this modal


693
00:22:20,876 --> 00:22:21,596
presentation.


694
00:22:22,436 --> 00:22:23,336
What actions they can take.


695
00:22:24,286 --> 00:22:25,656
Now, we think the new card style


696
00:22:25,656 --> 00:22:26,886
is pretty great, which is why


697
00:22:26,886 --> 00:22:28,726
it's now the default for iOS,


698
00:22:29,696 --> 00:22:30,776
but they're not always


699
00:22:30,776 --> 00:22:31,406
appropriate.


700
00:22:32,176 --> 00:22:34,706
For some tasks, like editing a


701
00:22:34,706 --> 00:22:36,176
picture or marking up a


702
00:22:36,176 --> 00:22:37,996
screenshot, you really want to


703
00:22:37,996 --> 00:22:39,966
maximize screen space and


704
00:22:39,966 --> 00:22:41,656
minimize visual distraction.


705
00:22:42,446 --> 00:22:43,956
For workflows like this, you


706
00:22:43,956 --> 00:22:45,066
should use the optional


707
00:22:45,156 --> 00:22:46,416
full-screen presentation.


708
00:22:47,366 --> 00:22:49,456
And one final comment about


709
00:22:49,456 --> 00:22:50,616
modal presentations.


710
00:22:51,886 --> 00:22:54,056
Modals are for switching modes.


711
00:22:54,936 --> 00:22:56,516
Don't use them just because you


712
00:22:56,516 --> 00:22:58,126
like the animation or the visual


713
00:22:58,126 --> 00:22:59,006
style of them.


714
00:23:00,086 --> 00:23:01,366
So, a good example of modal


715
00:23:01,366 --> 00:23:02,846
sheet use is from Calendar.


716
00:23:03,556 --> 00:23:05,256
Calendar has two primary modes,


717
00:23:05,816 --> 00:23:08,306
viewing events in a grid or list


718
00:23:08,696 --> 00:23:10,856
and then creating or editing


719
00:23:11,146 --> 00:23:11,636
events.


720
00:23:12,906 --> 00:23:14,416
Viewing your calendar involves


721
00:23:14,766 --> 00:23:16,126
scanning all of the events that


722
00:23:16,126 --> 00:23:18,306
are in your calendar and then


723
00:23:18,306 --> 00:23:20,056
selecting them to see detail.


724
00:23:20,776 --> 00:23:21,876
Since we're still in the viewing


725
00:23:21,876 --> 00:23:24,256
mode, a child view is used for


726
00:23:24,256 --> 00:23:25,826
displaying those details.


727
00:23:26,596 --> 00:23:28,956
As the name suggests, a child is


728
00:23:28,956 --> 00:23:30,746
an extension of the parent view.


729
00:23:31,576 --> 00:23:32,676
A child view should be a


730
00:23:32,676 --> 00:23:35,276
continuation of the task or


731
00:23:35,276 --> 00:23:37,146
workflow that was started in


732
00:23:37,146 --> 00:23:37,996
that parent view.


733
00:23:38,906 --> 00:23:40,106
When creating or editing an


734
00:23:40,106 --> 00:23:42,236
event, a modal sheet signals to


735
00:23:42,236 --> 00:23:43,276
the people who are using


736
00:23:43,276 --> 00:23:44,856
Calendar that they've switched


737
00:23:44,856 --> 00:23:46,546
into a distinct and new


738
00:23:46,546 --> 00:23:47,146
workflow.


739
00:23:47,936 --> 00:23:50,746
OK. Now for our final iOS design


740
00:23:50,746 --> 00:23:53,166
topic and that's contextual


741
00:23:53,166 --> 00:23:53,576
menus.


742
00:23:54,246 --> 00:23:57,116
With the introduction of 3D


743
00:23:57,116 --> 00:23:59,416
Touch a few years ago came a new


744
00:23:59,416 --> 00:24:01,206
interaction called Peek and Pop.


745
00:24:02,066 --> 00:24:03,886
Peek and Pop was primarily about


746
00:24:03,886 --> 00:24:05,346
getting a larger preview of


747
00:24:05,406 --> 00:24:05,956
content.


748
00:24:07,456 --> 00:24:09,426
If available, actions could be


749
00:24:09,426 --> 00:24:11,536
accessed by swiping that preview


750
00:24:11,536 --> 00:24:11,996
upwards.


751
00:24:13,326 --> 00:24:14,956
Contextual menu shifts things


752
00:24:15,146 --> 00:24:17,556
around a bit and puts the focus


753
00:24:17,676 --> 00:24:18,586
on actions.


754
00:24:19,956 --> 00:24:21,146
Actions are presented


755
00:24:21,186 --> 00:24:21,976
immediately.


756
00:24:22,796 --> 00:24:24,896
Contextual menus also work on


757
00:24:24,896 --> 00:24:25,776
all devices.


758
00:24:26,686 --> 00:24:28,916
Peek and Pop only worked with 3D


759
00:24:28,916 --> 00:24:30,646
Touch, so it wasn't available on


760
00:24:30,646 --> 00:24:32,626
any iPads and some iPhones.


761
00:24:33,436 --> 00:24:35,046
While 3D Touch makes contextual


762
00:24:35,046 --> 00:24:36,916
menus appear more quickly, the


763
00:24:36,916 --> 00:24:38,506
gesture to get a contextual menu


764
00:24:38,506 --> 00:24:40,076
is just tap and hold and you can


765
00:24:40,076 --> 00:24:41,606
do that on any touch device.


766
00:24:42,576 --> 00:24:44,136
Contextual menus are comprised


767
00:24:44,136 --> 00:24:45,026
of two parts.


768
00:24:45,886 --> 00:24:47,496
There is a menu of commands that


769
00:24:47,496 --> 00:24:49,326
can be performed on an item or a


770
00:24:49,326 --> 00:24:51,956
selection and an optional


771
00:24:52,036 --> 00:24:53,876
preview of the selected item


772
00:24:53,876 --> 00:24:54,836
that will be affected.


773
00:24:55,756 --> 00:24:57,236
That preview can be a helpful


774
00:24:57,236 --> 00:24:59,136
reminder of what item will be


775
00:24:59,136 --> 00:25:00,656
affected by those menu of


776
00:25:00,696 --> 00:25:01,166
commands.


777
00:25:02,396 --> 00:25:03,526
The exact appearance of


778
00:25:03,526 --> 00:25:05,596
contextual menus will change


779
00:25:05,596 --> 00:25:06,836
based on device size and


780
00:25:06,836 --> 00:25:07,636
orientation.


781
00:25:08,286 --> 00:25:10,586
On iPhone, the preview and phone


782
00:25:10,866 --> 00:25:14,236
are stacked in portrait and the


783
00:25:14,236 --> 00:25:15,436
same thing on iPad when there's


784
00:25:15,466 --> 00:25:16,906
three commands or fewer.


785
00:25:17,226 --> 00:25:18,416
Otherwise, the menu and preview


786
00:25:18,416 --> 00:25:19,596
are displayed side by side.


787
00:25:20,366 --> 00:25:21,696
Contextual menus will appear


788
00:25:21,696 --> 00:25:23,386
directly above the object they


789
00:25:23,386 --> 00:25:25,536
affect or as close to it as


790
00:25:25,566 --> 00:25:26,056
possible.


791
00:25:27,636 --> 00:25:29,686
As with macOS contextual menus,


792
00:25:30,056 --> 00:25:31,546
you can choose the order of menu


793
00:25:31,546 --> 00:25:32,056
commands.


794
00:25:32,616 --> 00:25:34,006
It's best to put the most


795
00:25:34,116 --> 00:25:35,526
frequently used or accessed


796
00:25:35,526 --> 00:25:36,846
commands at the top so that


797
00:25:36,846 --> 00:25:38,326
they're easier to access.


798
00:25:39,066 --> 00:25:40,256
Otherwise, you should group


799
00:25:40,426 --> 00:25:42,196
commands because they're heavily


800
00:25:42,196 --> 00:25:43,266
related with each other.


801
00:25:43,736 --> 00:25:45,256
So, it totally makes sense that


802
00:25:45,256 --> 00:25:47,266
cut, copy, and paste are near


803
00:25:47,266 --> 00:25:47,726
each other.


804
00:25:48,856 --> 00:25:50,706
You can also use separators to


805
00:25:50,706 --> 00:25:53,056
create visually distinct groups.


806
00:25:53,906 --> 00:25:56,096
And iOS contextual menus can be


807
00:25:56,176 --> 00:25:58,436
hierarchical, meaning that some


808
00:25:58,436 --> 00:25:59,766
of these options can lead to a


809
00:25:59,876 --> 00:26:01,766
secondary submenu.


810
00:26:02,996 --> 00:26:05,166
Contextual menus on iOS also


811
00:26:05,166 --> 00:26:07,126
include glyphs to help people


812
00:26:07,126 --> 00:26:08,096
find what they're looking for


813
00:26:08,096 --> 00:26:10,426
more quickly and they allow you


814
00:26:10,426 --> 00:26:12,016
to warn people about destructive


815
00:26:12,016 --> 00:26:15,446
actions by labeling them in red.


816
00:26:15,666 --> 00:26:17,186
You should try to add contextual


817
00:26:17,186 --> 00:26:19,086
menus to every object in your


818
00:26:19,266 --> 00:26:19,356
app.


819
00:26:20,656 --> 00:26:22,156
Think about macOS.


820
00:26:22,806 --> 00:26:25,546
You expect every object in every


821
00:26:25,546 --> 00:26:27,696
app to have a contextual menu.


822
00:26:28,506 --> 00:26:30,086
They're a great way to learn


823
00:26:30,086 --> 00:26:32,006
what actions can be performed on


824
00:26:32,006 --> 00:26:32,566
an object.


825
00:26:33,476 --> 00:26:35,856
And the more iOS apps add


826
00:26:35,856 --> 00:26:37,936
contextual menus, the more


827
00:26:37,936 --> 00:26:40,346
people will expect every app to


828
00:26:40,346 --> 00:26:41,796
support contextual menus,


829
00:26:42,366 --> 00:26:43,196
including yours.


830
00:26:44,646 --> 00:26:46,976
OK. One final comment about


831
00:26:46,976 --> 00:26:47,936
contextual menus.


832
00:26:48,566 --> 00:26:50,416
The actions they contain should


833
00:26:50,416 --> 00:26:51,866
still be available somewhere


834
00:26:51,866 --> 00:26:53,546
else in your main interface.


835
00:26:54,346 --> 00:26:56,156
Contextual menus are a powerful


836
00:26:56,156 --> 00:26:57,476
and-- are powerful and


837
00:26:57,476 --> 00:26:59,556
convenient, but people might not


838
00:26:59,556 --> 00:27:02,356
always think to access them.


839
00:27:02,566 --> 00:27:04,706
Now, I can't wait to see what


840
00:27:04,706 --> 00:27:07,126
you do with Dark Mode, updated


841
00:27:07,256 --> 00:27:09,716
modal presentations, and the new


842
00:27:09,716 --> 00:27:10,666
contextual menu.


843
00:27:11,566 --> 00:27:12,756
For more information and


844
00:27:12,756 --> 00:27:14,016
resources, go to


845
00:27:14,016 --> 00:27:16,396
developer.apple.com/design.


846
00:27:16,876 --> 00:27:18,236
There you can find the updated


847
00:27:18,236 --> 00:27:21,446
SF font, the SF Symbols app, and


848
00:27:21,536 --> 00:27:23,876
the updated iOS design resources


849
00:27:23,876 --> 00:27:24,576
for Sketch.


850
00:27:25,236 --> 00:27:27,066
The Adobe Photoshop and Adobe XD


851
00:27:27,186 --> 00:27:29,346
resources will be coming later


852
00:27:29,346 --> 00:27:29,896
this summer.


853
00:27:30,596 --> 00:27:33,866
Also, check out the Apple Human


854
00:27:33,866 --> 00:27:35,406
Interface Guidelines for more


855
00:27:35,406 --> 00:27:37,626
details about everything that I


856
00:27:37,626 --> 00:27:38,576
covered today.


857
00:27:39,596 --> 00:27:41,856
OK. Thank you for your time.


858
00:27:42,508 --> 00:27:44,508
[ Applause ]

