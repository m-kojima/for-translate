 [音楽]
 【拍手】
 >>こんにちは。
私はJayです。
私はSiri and Shortcutsチームのデザイナーです。
そして今日、私たちはあなたのアプリのための素晴らしいショートカットをデザインする方法について話します。
今日は、3つの主要トピックを取り上げます。
最初に、私はあなたのアプリのすべてのユースケースを見て、どのユースケースがショートカットとして意味があるかを決めることについて話します。
それでは、これらのショートカットをアプリで見つけられるようにする方法について説明します。
そして最後に、iOS 13のショートカットの新しいインタラクティブ機能のための優れたSiriエクスペリエンスの設計方法について説明します。
さて、ちょっと戻って、ショートカットは一般的にOSのより多くの場所でより多くのユーザーの前にあなたのアプリの機能をもたらすための素晴らしい方法です。
それでは、アプリのショートカットが表示される場所を見てみましょう。
ユーザーがアプリで何かをしたときにシステムに通知すると、ユーザーが次にそのアクションを実行したいと予測したときにシステムが自動的にショートカットを提案することができます。
そして、これらのショートカットはロック画面と検索に表示されます。
ここでは、このショートカットを使用すると、ガイド付きワークアウトをすばやく開始できます。通常はこの時刻に行います。
ユーザーがSiriにカスタムフレーズを割り当てることによってSiriにショートカットを追加した場合、ユーザーは自分の声でいつでもそれを呼び出すことができます。
ここでは、ショートカットを使って通常の夕食を注文できます。
 1つの簡単な確認ステップで、ユーザーはいくつかの素晴らしい地中海料理を手に入れることができます。
 Siriによるショートカットのもう1つの優れた用途は、情報を手や目から解放することです。
だから、あなたのHomePodに、あなたがトランジットアプリのショートカットを持っているなら、あなたは、ヘイシリ、バススケジュールを言うことができます。
そして、Siriはあなたのアプリからバスのスケジュール情報を読み上げます。
また、アプリの機能をマルチステップショートカットの一部として組み込むこともできます。
ここでは、ショートカットはあなたの夕方のルーチンを処理し、あなたの到着の家に間に合うようにスープを注文し、あなたの車に乗るのにあなたのお気に入りの音楽を演奏し、そして最も速い方向を示している。
そのため、これらの例を見てみると、ショートカットはアプリで頻繁に使用される便利なアクションを高速化するのに最適です。
一目で、またはあなたの声で、あるいはあなたのアプリが他の人と一緒に働くことができる強力なマルチステップショートカットのためのビルディングブロックとして情報を提示する。
 iOS 12でSiriのショートカットの提案を紹介しましたので、ロック画面や検索で自動的に提案される素晴らしいショートカットの作り方については過去のセッションを振り返ってください。
今日は、iOS 13の新しいSiri機能を利用するためのショートカットの作成方法に焦点を当てます。
 Siriのショートカットに役立つ可能性がある、アプリ内の機能の優先順位付けの方法を順を追って説明します。
それをするために、私たちのお気に入りのアプリ、SoupChefの1つを見てみましょう。それはあなたが集配または配達のためにスープの多種多様を注文することを可能にします。
 SoupChefショートカットを作成するための設計プロセスを見ていきましょう。
アプリができることをすべてリストします。
そうするとき、ユーザーが彼らの声で繰り返したくなるかもしれないことについて考え始めてください。
つまり、SoupChefを使えば、スープのメニューを閲覧するなどのことができます。
スープを注文する。
注文状況を確認するか、過去の注文を表示します。
これらの機能のいくつかを一つずつ見てみましょう。
メニューを閲覧することは非常に視覚的な活動であり、音声にうまく変換できない多くの構造化された情報を必要とします。
スクロール、タップ、そしてナビゲートが必要です。
そして、それは呼び出しから呼び出しへと変化する可能性が低い情報を提供します。
そして、それは目的を達成するための手段であり、それ自体では価値のある行動ではありません。
だから、これはショートカットの良い候補ではないかもしれません。
注文状況を確認することは、ユーザーが自分の声でやりたいことかもしれません。Siriから情報の要約を手に入れることができます。
しかし、それはまた、ユーザーが何かを注文した直後の狭い時間枠にしか適用できません。
そのため、これはユーザーがショートカットに変わることを許可することを検討できるものですが、それは配信期間が長い場合、または複数のフェーズがある場合に限られます。
そして過去の注文を見るのは良いことですが、私はあなたについては知りません、私はそれを定期的にチェックしていません。
それで、素晴らしいショートカットではありません。
スープを注文することは非常に貴重な活動です。
実際、アプリの最も重要な活動です。
そして、ユーザーがお気に入りのスープを持っていればそれが再現可能であると想像することができます。
それでは、これをショートカットの候補として考えてみましょう。
したがって、要約すると、ショートカットの優れた用途は価値があるもの、または繰り返すのが興味深いものです。
ビジュアルに頼ったりタップしたりしなくても、あなたの声でできます。
そして、多くの文脈で起動可能です。
そのため、ショートカットはほんの少しの時間帯に適用できるわけではありません。
それでは、ユーザーにショートカットでスープの順序を変えてもらいたいことがわかったので、それをアプリで発見可能にする方法を見てみましょう。
標準の[Siriに追加]ボタンが用意されています。これにより、ユーザーはアプリのどの機能をSiriのショートカットに変換できるかを簡単に確認できます。
しかし、慎重に使用してください。
メインメニューのすべての項目に[Siriに追加]ボタンを配置した場合は、これを行わないでください。
ボタンがそれ自身であるのと同じくらい美しいので、このようにそれを繰り返すことは醜く見えます、そしてそれはここでは実際には関係ありません。
ユーザーはおそらく最初から注文をしようとしています。
そして、これらのボタンは邪魔をしています。
そして、これらはユーザーが以前に注文したことがないアイテムである可能性があります。
だから、まだそれらを並べ替えることを提案するのは意味がありません。
代わりに、ユーザーが何かを繰り返したいと思う可能性があることを明確に示している、集中的なUIで表示できる機会を見てください。
たとえば、ユーザーが何かを注文した直後に[Siriに追加]ボタンを表示することをお勧めします。
ユーザーが以前に注文するのに十分に適しているとユーザが判断した場合、そのロジックは、ユーザが再度注文したいと思う可能性が高い。
そして、あなたはユーザーがやろうとしていることを何も妨害していません。
彼らは注文を終えたばかりなので、これは良い機会です。
 [Siriに追加]ボタンをアプリの外観にさらによく合わせるために、ボタンの角の半径をカスタマイズできるようになりました。
また、ユーザーのライトモードまたはダークモードの設定に基づいて外観を自動的に変更することもできます。
さて、あなたが本当に一生懸命やってみた、そして本当に難しいように、そしてボタンの視覚スタイルがあなたのアプリに合わないなら、あなたはあなた自身のボタンを作ることができます。
しかし、Add to Siriの機能をすべて複製する必要があります。
標準の[Siriに追加]ボタンは、一度設定されたユーザーのショートカットフレーズを表示します。
そして、これはショートカットを実行するために彼らが言うことができることをユーザーに思い出させる良い方法です。
それをタップすると、ユーザーがショートカットを編集または削除できる標準のシートが表示されます。
すべてのショートカットを一覧表示する集中管理された場所がアプリに必要な場合は、前に見たように、すべての行に[Siriに追加]ボタンを配置するのはあまりにも多くの場合があります。
そのため、代わりに、標準のUIKit要素を自由に使用できます。
ユーザーがショートカットを設定するときに、[Siriに追加]ボタンと同じように、ユーザーがショートカットを設定したフレーズを表示するようにしてください。
それをタップすると、ショートカットを編集または削除できるシートが表示されます。
それでは、初めてショートカットを設定するユーザーに戻りましょう。
ユーザーが[Siriに追加]ボタンをタップすると、[Siriに追加]シートが表示され、そこでユーザーはショートカットを呼び出すために使用するフレーズを選択できます。
 iOS 13では、あなたのアプリはあなたが選択したショートカットを事前に埋めておくことができます。
そして、あなたがそれを提供するならば、たいていのユーザーはおそらくこのフレーズを割り当てるでしょう、それであなたが良いデフォルトを提供することを確認してください。
この場合、Order Soupは、覚えやすい、短く覚えやすいフレーズです。ユーザーはショートカットに本当に使いたいと思うかもしれません。
別の例を見て、しばらくスープから一休みしましょう。
バスの運行スケジュールを確認する
これは比較的短いため、賢明なフレーズのように見えますが、ユーザーが単語を忘れたり単語を入れ替えたりする機会は十分にあります。
彼らは言うことを試みるかもしれない、バスのスケジュールを見上げる。
または、35のバススケジュール。
または、「the」をすべて削除するだけです。
 Siriはこれらをフレーズに一致させるように最善を尽くしますが、長いフレーズを思い出そうとすると、ユーザーはまだかなりクリエイティブになる可能性があります。
だから、これは最も推奨されるフレーズではないかもしれません。
代わりに、それを短くして、約3語以下にしてください。
固有名詞、または動詞と目的語だけに限定してみてください。
これにより、ユーザーが語順を混同したり、異なる前置詞を使用したりする可能性が低くなります。
 OK。
ユーザーがトマトスープを注文するためのショートカットを設定したいです。
しかし、別のスープを注文するなど、ユーザーがショートカットに毎回少しずつ違う動作をさせたい場合はどうなりますか。
 iOS 13では、ユーザーはDo領域の下のセルをタップして、いずれかのフィールドをタップするだけでショートカットに事前に焼き付けられる情報量をカスタマイズできます。
ユーザーは、スープ自体の種類など、特定のフィールドを空白のままにすることを選択できます。
そして、彼らがそうするとき、Siriはあなたのアプリの代わりにこの欠けている情報を要求することができます。
今、理想的にはショートカットは非常に最小限の相互作用しか持たない。
結局のところ、それは人々が彼らが頻繁にすることに何かを加速するはずです。
そのため、Siriシートに広告を表示するときには、1〜2ステップでショートカットを実行するために、できるだけ多くの情報をアクションに含める必要があります。
この場合、すべてがすでに指定されているので、このショートカットは確認画面に直接進みます。
しかし、ユーザーがすべてを空白のままにして、Siriとのやり取りで注文の詳細をすべて指定したい場合はどうなりますか？
 Siriとの完全な順序付けスープ対話を設計する方法を見てみましょう。
スープリクエストを実行するために知っておく必要がある情報について考えてください。
のような、スープの種類です。
あなたが配達のために注文するか、拾うかどうか？
そして、あなたが配達のために注文しているならば、あなたはどこに配達していますか、そしてあなたがピックアップのために注文しているならば、あなたは何を拾っているのですか。
この情報を収集する順序と方法について考え始めるには、アプリのインタラクションをユーザーとSiriの間の会話として考える必要があります。
そして、この会話を視覚化する1つの方法は、スクリプトを使用することです。これは、会話パスを簡単に書き留めるのに役立ちます。
もちろん、たった1つの道があるわけではありません。
会話が進む可能性があるすべてのパスを書き留めておく必要があります。
たとえば、アプリでサポートされていないオプションをユーザーが言うことができます。
その場合、Siriはおそらくそれをユーザーに示すべきです。
さて、スクリプトの本を手渡すことは設計仕様として扱いにくいかもしれないので、プロセスの終わりに、あなたはおそらくこのような何かになってしまうでしょう。 会話内のすべての可能な状態と遷移を網羅する流れ図。
さて、Siriが選択肢を提示し、ユーザーの入力を処理することができる具体的な方法があるので、あなたが自由に使える会話パターンに直接飛び込みましょう。
あなたが持っている最初のパターンはプロンプトです。
これはユーザーから値を集めることができる最も自由な方法です。
あなたは質問としてあなたのプロンプトを書き、そして正しい形式の応答のためにユーザを設定するようにそれを言い表すべきです。
ユーザーがあなたのアプリに複数のことを意味するかもしれない何かを言うとき、ユーザーが彼らが何を意味するのかを指定することを可能にするオプションリストを提示することができます。
これは曖昧さ回避プロンプトと呼ばれます。
オプションリストを前もって提示することで、会話に別のステップを追加する曖昧さ回避プロンプトを最小限に抑えることができます。
ユーザーが自分のショートカットフレーズ「Order Soup」を言って、リストに直接移動したことに注目してください。
選択可能なオプションのリストが制限されている場合は、自由形式のプロンプトの代わりにこれを使用してください。
プロンプトダイアログでリストからの選択を促すようにしてください。
 「which」という単語で始まる質問は、ここではうまく機能します。
表示なしでsショートカットを使用すると、Siriはオプションを読み上げます。
 AirPod、HomePod、またはユーザーがHey Siriと言ったときのように。
そして、SiriはあなたがビジュアルUIでそれらを提供するのと同じようにそれらを読み上げます。
しかし、特に多くのオプションが類似している場合は、これが冗長になる可能性があることを想像できます。
このエクスペリエンスを向上させるために、各オプションに追加できる発音のヒットを提供することで、Siriがオプションをどのように大声で読み上げるかを個別に指定できます。
少し違った例を見てみましょう。
ユーザがNoodle Soupを要求しています。
そして、2種類あります。
 Beef Noodle Soup、またはVeggie Noodle Soupと言う代わりに、単にBeefまたはVeggieと言った方がよいでしょうか。
そのため、各項目を区別する詳細だけを読むことを検討してください。
現在、会話は双方向であるため、ユーザーが何を言おうとしているのかも考慮する必要があります。
そして、ユーザーはあなたがオプションにラベルを付けた正確な言葉を使わないかもしれません。
応答の自然な変化を処理するには、各オプションについて、そのオプションと同じ意味を持つ同義語をSiriに提供する必要があります。
したがって、ユーザーがビーフと言っただけで、それはビーフヌードルスープに一致します。
これらの同義語を思いつくとき、あなたはあなたの質問の言い回しがユーザーが答えるかもしれない方法に影響を与えることにも留意すべきです。
そのため、肉料理やベジタリアン料理のように選択肢をよりカジュアルに表現する方法がある場合は、ユーザーがそのような表現をSiriに繰り返していることを認識してください。
特に重要度の高い値のように、ユーザーがより確実な応答を希望する場合は、パラメーター確認プロンプトを表示できます。
しかし、これはユーザーを遅くするので、慎重に、そして本当に例外的な場合にのみ使用してください。
パラメータ確認プロンプトを使用するもう1つの方法は、ユーザーの要求を予測するための独自のロジックがアプリにあるかどうかです。
あなたはユーザーにあなたの最善の推測を提示することができます、そして、彼らはそれを確認することができます、その場合、そう、彼らは追加の詳細を提供する必要はありません。
または、拒否することもできます。その場合は、より自由度の高いプロンプトに戻ることができます。
ユーザーが何を望んでいるのかを推測できるのであれば、ショートカット操作をさらに高速化するための優れた方法です。
フローの最後に、特にアクション自体の影響が大きい場合は、アクション全体に適用される確認プロンプトの使用を検討してください。
このステップでは、価格や納期など、決定に関連する実行しようとしているアクションの詳細を、完全にカスタマイズ可能なビジュアルユーザインタフェースで確認できます。
発注カテゴリのアクションの場合、システムはユーザーに確認を要求します。
それで、あなたがそのカテゴリーに入るならば、あなたは素晴らしい確認経験を提供することを、確かめてください。
ただし、ショートカットは画面を見ていないユーザーによって実行される可能性があるため、音声のみのエクスペリエンスにはダイアログを提供する必要があります。
この場合、ユーザーが選択するのを助けるために追加のダイアログを提供します。
この追加ダイアログの目的は、他の方法ではビジュアルユーザインタフェースに表示できない情報を提供することです。
それで、この余分なダイアログは、あなたがさもなければディスプレイに描くであろう最も重要な情報の話された同等物として考えてください。
最後に、あなたの返事。
シリは、アクションのステータスを示します。
誰があなたのスープを配達しようとしているか、そして最新の配達予定時間など、追加の詳細を説明するためにここに視覚的なUIの要約を提供することができます。
 "OK、と言っているだけです。
追加情報を表示するためにディスプレイを使用しているためです。
音声のみのエクスペリエンスの場合は、より説明的なダイアログを指定する必要があります。
また、この余分なダイアログは、ディスプレイに描画する応答UIの最も重要な情報と同等のものと考えてください。
確認と返答のダイアログについて考えているときは、ショートカットのカテゴリを選択する必要があることに注意してください。
 Xcodeでショートカットを定義するときは、ショートカットの機能に最も近いクローゼットのカテゴリを選択してください。
 SoupChefの場合、注文カテゴリが請求書に適合していることは明らかです。
確認プロンプトで、Siriは選択したカテゴリに基づいて質問自体を提供します。
そのため、ここで白で強調表示されている、カスタマイズした確認ダイアログの一部として質問を含めないでください。
応答ダイアログで、Siriはそのカテゴリに適したステータスを提供します。
あなたのカスタムダイアログはSiriが提供するダイアログの最後に追加されます。
また、音声対話は、ユーザーがアプリを開いて手動で続行しなければならないようにするため、できるだけ堅牢にする必要があります。
たとえば、パラメータ値が無効な場合は、明確なエラーメッセージを入力する必要があります。
 Siriは自動的にその値を再入力します。
そもそもこのシナリオに没頭することも避けるべきです。
オプションリストを提示している場合は、実行時に無効であるとわかっているオプションを提示しないでください。
また、ユーザーを穴から掘り下げる機会も検討する必要があります。
ユーザーは自分のショートカットに配達場所などの値を含めることができます。通常は自分の家だけなので、配達場所をSiriに言わないことに慣れています。
ある日、彼らは家から遠く離れているときにショートカットを使うかもしれません。
その場合は確認して、別の場所を指定してください。
そして、何らかの理由で、ユーザーはアプリ内でショートカットを実行し続けたいと思うかもしれません。
それをするために彼らはあなたのUIのどこでもタップすることができます。
そのため、UIを表示するときは、領域全体がアプリを開く大きなボタンの1つであることに注意してください。
そのため、個々に対話可能に見える要素を描画しないでください。
できません。
ユーザーがこの領域をタップしたときに、アプリが正しい場所まで開き、その時点までにユーザーが既に提供していたすべての情報がアプリに入力されていることを確認してください。
そして最後に、私たちはあなたが対話を書くときに時間がかかることをお勧めします。
それはあなたがただデモをするために何かを持っていてそしてそれからあなたの最終的な輸送製品の中に残すためにただちょっとパスをすることができるものではありません。
音声対話では、言語がユーザーインターフェイスです。
だから、あなたはあなたのSiriインタラクションの言葉をあなたがあなたのアプリのピクセルをするのと同じくらい尊敬と注意を払って扱うべきです。
それでは、いくつかのガイドラインを見ていきましょう。
過度に礼儀正しくしたり、過度に個性を注いだりしないでください。
自分のスープをカスタマイズしたいユーザーは、このショートカットを実行するたびにこの重要ではないダイアログを聞くことになり、イライラすることになります。
疑問がある場合は、テストしてください。
あなたの会話を話すシリに耳を傾けてください。
 3度目の聞き取り後、あなたの会話はあなたにどのように感じますか？
 10日はどうですか？
その一部が煩わしいと感じる場合、それはあなたがあなたの対話の冗長さを減らすべきであるという良い合図であるかもしれません。
対話は簡潔で中立で、期待している反応の種類を伝えるべきです。
あなたのダイアログにあなたのアプリ名を含めないでください。
あなたのアプリはすでにあなたの確認と応答のUIを通して、そして時折Siriの自身の追加を通して、視覚的に帰因するでしょう。
だから、ちょうどあなたの名前を取り出しなさい。
心配しないで、あなたのブランドは安全です。
同様に、あなたのダイアログにあなたのユーザーの名前を含めるべきではありません。
 Siriは時々HomePodでユーザーの名前を話して本人確認をすることがあります。
あなたのアプリもそうするならば、それは繰り返していらいらするように聞こえるかもしれません。
だから、ちょうどあなたの名前を取り出しなさい。
 Siriはアクションを実行していないので、一人称代名詞を使用しないでください。
微妙な違いですが、重要なものです。
 Siriの声で「私」または「私たち」と言うことで、ユーザーはSiriの方がアプリの機能を理解しているほうがよいと思い、アプリとSiriが理解できないフォローアップ行動を取ろうとするかもしれません。
代わりに、「ここ」や「いくつかのオプションがあります」などの単語を使用して、オプションを中立的に提示してください。 それで、私たちは今日何を学びましたか？
ショートカットは、アプリの最も再現性の高い機能を高めるためのものです。
アプリに追加したショートカットを使用して、アプリ内からショートカットに変換できるものをユーザーに確実に知らせる必要があります。
あなたはあなたのSiriインタラクションを論理的、簡潔、そして堅牢にするべきです。
そして、あなたは対話を書くときにあなたは特別な注意を払うべきです。
ありがとうございました。
 【拍手】
