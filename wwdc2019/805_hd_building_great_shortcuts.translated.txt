[音楽]
 【拍手】
 >>こんにちは。
私の名前はイアンです。私はショートカットチームのエンジニアです。
今日は、ユーザーがどのようにして自分のショートカットを作成できるのか、そしてどのようにしてユーザーが可能な限り最高のエクスペリエンスを確実に得ることができるのかについてお話します。
今日は3つのトピックを取り上げます。
まず、アプリのインテントをユーザーがアクションとして編集できるようになりました。
アクションの各部分を順を追って説明し、ユーザーがショートカット内でそれらを構成する方法を説明します。
あなたは素晴らしいショートカットを作成しました、そして私たちはあなたがそれらをあなたのユーザーの前にも持っていることができることを確認したいです。
私は、Add to Siriや他のAPIを使ってあなたのアプリからショートカットを紹介することができるいくつかの方法について話します。
そして後で、多段階のショートカットを作成し、入力と出力を使用して他のユーザーとうまく動作するようなアクションを作成します。
始めましょう。
 Soup Chefというアプリがあります。
そしてあなたが知っているように、それは配達とピックアップのためにクラムチャウダーまたはトマトスープを注文する超方法です。
そしてスープシェフはスープを注文することを意図しています。
だから、これはショートカットエディタの中で、アクションが設定されているところです。
すべてのアクションは、ユーザーが編集できるパラメーターを持つことができます。
そしてこれらのパラメータはIntent定義ファイルの中で定義されています。
ユーザーが値を入力するまで、パラメータには表示名が表示されます。
また、この表示名は構成UIではタイトルとして表示されることがあるので、表示名は必ず大文字にしてください。
パラメータサマリは、ショートカットが実行されたときに何が行われるのかを説明する文章です。
要約は文章のように読み、動詞で始める必要があります。
サマリにアプリの名前を記入する必要はありません。アプリのアイコンの横にアクションの上部に表示されるためです。
要約を短くして、アクションが機能するために記入しなければならないパラメーターのみを含めるようにしてください。
また、サマリを含まないパラメータは、[Show More]の下に表示され、編集中にユーザが展開して残りのパラメータの値を変更できます。
パラメータの概要は、インテントエディタXcodeの[ショートカット]アプリセクションで定義されています。
 Soup Chefには複数の異なるサマリーがあります。
ピックアップを注文するためのものと配達を注文するための他のもの。
そのため、ユーザーがアクション内で集配と配達を切り替えると、パラメーターの要約は、ユーザーが入力したさまざまな値に基づいて更新されます。
だから、あなたのアプリはユーザーが何をするのか、そしていつ知るのかを最もよく知っています。
そのため、ショートカットを作成するのに最も関連性の高い場所は、アプリケーションのすぐ内側にあると考えます。
ここで我々はスープシェフの中にいます、そして、誰かがちょうどチーズと一緒にいくつかのトマトスープを注文しました。
ユーザーがちょうど繰り返す可能性が高いアクションを実行しただけなので、これが「Siriに追加」ボタンを提示する素晴らしい機会です。
そのためには、Soup Chefが注文情報をインテントに配置してから、[Add to Siri]ボタンをUIに配置しました。
ユーザーがそのボタンをタップすると、アプリでSiri View Controllerに追加を表示してショートカットを作成することができます。
これを行うためのAPIはiOS 12以降変更されていませんが、今年は、View Controller内でユーザーができることを拡張しました。
それでは、何が新しいのか見てみましょう。
まず、ショートカットを保存するためにフレーズを言う必要がなくなり、ユーザーは単にそれを入力するか口述を使用することができます。
あなたのアプリはあなたの意図のrecommendedInvocationPhraseプロパティを設定することによってこの値を事前に埋めているべきです。
このフレーズを短くし、ユーザーが行ったばかりの行動について説明的にするようにしてください。
また、ユーザーがこれをSiriに伝えることができるようになるため、話しやすく覚えやすいものになるはずです。
その下にはDoセクションがあり、このショートカットが実行されたときに何が行われるかのプレビューをユーザーに表示します。
ユーザーが行ったことに関する意図にできるだけ多くの情報を入れるようにしてください。
これにより、フォローアップに関する質問を多くしなくても、アプリがスープを再度注文できるようになります。
そしてあなたがあなたの意図を設定可能にしたならば、ユーザーはこれをタップし、ショートカットをカスタマイズし、そしてあなたによって、事前に入力された値を変更することができます。
ユーザーが終了すると、[Siriに追加]ボタンをタップしてアプリに戻ります。
その後、ショートカットアプリにアクセスして、作成したショートカットを表示、編集、および実行できます。
それでは、今すぐショートカットアプリを見てみましょう。ここで、ショートカットを発見可能にすることもできます。
多くの初めてのユーザーはギャラリーである一番右のタブから始めます。
これが、事前に作成されたショートカットを提案する場所です。
 iOS 13では、ギャラリーに新しいセクションを追加しました。それはあなたのデバイスで頻繁に使用されるアプリからのショートカットを提案しました。
現在、アプリの推奨ショートカットは、ユーザーがアプリと対話する頻度に応じて、Galleryで目立つように機能する可能性があります。
あなたのアプリは、2つの異なる方法でギャラリーに表示される提案に影響を与えることができます。
 1つは、推奨されるショートカットのリストを明示的に設定し、INVoiceShortcutCenterを使用してこれを実行することです。
あなたのユーザの習慣や好みについてもっと学ぶのと同じくらい頻繁にこれを更新することができます。
また、このリストには、ユーザーがアプリ内で行った最近のまたは頻繁に使用されるアクションも表示されます。
さて、Shortcutsアプリはアプリ内でユーザーが何をしているのかをどのように認識しますか？
これまでに、寄付という概念を導入しました。
これで、Donationを使用すると、ユーザーが行ったことについてシステムに通知することができ、システムは後で関連する時点でそれらを提案することができます。
あなたはを作成することができます、あなたはINInteractionを作成し、そこにユーザがしたことについての記入済みの意図を置くことによって寄付することができます。
そして、後でDonateメソッドを呼び出します。
寄付はあなたのショートカットがギャラリーに表示されるのを許可するだけでなく、それはまたロックスクリーンやSpotlight検索のような場所でプライベートのオンデバイスSiri提案を可能にします。
寄付金からの提案がシステム全体でどのように機能するかについての詳細を知りたい場合は、WWDC 2018の講演をご覧ください。
さて、ユーザーがあなたのショートカットを作成し発見しているかもしれないもう一つの時は、アプリの中に新しいショートカットを作るときです。
ショートカットエディタにショートカットに追加できる可能性のあるすべてのアクションが表示されます。
トップには、メディアの再生、リマインダの追加、ループやIfステートメントなどのスクリプトアクションなど、何百もの組み込みアクションが含まれているカテゴリがあります。
次に、提案されたアクションのリストです。
そして、これらの提案はサードパーティのアプリからのアクションを含むデバイスの使用状況にも基づいています。
私はスープをたくさん注文するので、Soup Chefの行動はここの一番上にあります。
では、Soup Chefはどのようにしてこれらのスープオプションをすべて表示させたのでしょうか。
これを機能させるには、2つの簡単なステップがありました。
最初のことは、どのパラメータがキーパラメータであるかを選択することです。
あなたの重要なパラメータは、ユーザにとって最も識別可能なものであるべきです。
 Soup Chefはスープの種類をパラメータとして選択しました。これは、数量やトッピングよりも、ユーザーにとって最も有用なものだからです。
もう1つのステップは、INVoiceShortcutCenterまたはINInteractionを介して既に寄付している場合は、ユーザーがそのアクションをアプリ内で実行するたびに寄付することです。その場合、アプリに必要な追加の作業はありません。
あなたの寄付がその重要なパラメータに設定された値を持っている限り、私たちはそれを提案の中に示すことができます。
また、寄付するときにあなたのキーパラメータのための画像を含めることを忘れないでください。
画像を提供しない場合は、代わりにアプリのアイコンがリストに表示されます。
さらに、寄付されているかどうかにかかわらず、アプリからすべてのアクションのリストを探している場合は、アプリのセクションをタップしてそれらすべてを表示できます。
それでは、ギアを切り替えて、入力と出力を使用して連携して動作する一連のアクションを含むショートカットを作成しましょう。
 StickyNoteというアプリがあります。
そして、StickyNoteは私がしなければならないことを書き留めておくメモ作成アプリです。
 StickyNoteにはたくさんのアクションがあります。
そして最も重要なのは、それは私が名前でメモを検索することができるというアクションを持っています。
そして、メモが見つかったら、メモへのテキストの挿入や削除など、そのメモを操作できる他のアクションがあります。
 iOS 13では、他の人が使用できるように情報を出力するためのアプリからのアクションが許可されました。
そのため、Find StickyNoteアクションは、識別子、名前、内容、および最後に変更された日付を含むStickyNoteを出力できます。
 2つのショートカットを連鎖させてメモを見つけ、そのメモに情報を追加できるようにしたいです。
それで、メモは最初のアクションの出力になるでしょう、そして私はそれを入力として2番目のものに渡しています。
それでは、出力を生成するためのアクションの設定方法を見てみましょう。
まず、左下のプラスボタンをクリックして、StickyNoteとは何かを表す新しいタイプを追加します。
型にはすでに識別子と表示名があります。
しかし、メモには内容と、それが最後に変更された日付があります。
そこで、これらをプロパティとして追加して、ユーザーがその情報すべてにアクセスできるようにします。
次に、回答を選択します。
そして応答は意図の結果を表すオブジェクトです。
今作成した新しいタイプを選択して、noteプロパティを追加します。
そして最後に、Outputドロップダウンからそのプロパティを選択します。
そのため、応答に複数のプロパティがある場合は、その[出力]ドロップダウンから単一のプロパティを選択する必要があります。
そしてこれはあなたが他の行動が見ることができる情報を制御することを可能にします。
これで、アクションが出力されたので、次にアクションを追加してから、見つかったメモをテキストを追加するメモとして選択します。
しかし、2つのアクションが一緒になってとてもうまく機能するようにするには、2番目のアクションに自動的にメモを書き込めるようにすればいいので、毎回最初から選択する必要はありません。
ですから、あなたがあなたの行動がうまくいって、あるものからの出力を別のものへの入力に満たす必要があるならば、あなたは入力パラメータとしてあなたのパラメータの1つを選択する必要があります。
ここでは、その「メモをテキストに追加」アクションを見ています。
そして、音符を入力パラメータとして選択します。
そのため、今度は2番目のアクション、「メモにテキストを追加」アクションを追加すると、そのメモは最初のアクションのnoteパラメーターにすでに入力されています。
そのため、入力と出力を追加することで、ユーザーは自分のアクションを使用して複数のステップショートカットを作成して、一緒にうまく機能させることができます。
それでは、今日取り上げたことを見てみましょう。
まず、ショートカットアクションの構成要素と、ユーザーがどのように構成できるかを説明しました。
次に、ユーザーが自分の行動を発見できるさまざまな方法を調べました。
そして、Add to Siriエクスペリエンスを使用してアプリの内部から始めました。
そして次に、Shortcutsアプリの中のGalleryとEditorを見て、そこであなたの行動を発見可能にする方法についても話しました。
そして最後に、私たちはあなたの行動がどのようにして一緒にインプットを取り、アウトプットを生み出すことができるかを探りました。
スープシェフアプリはサンプルコードとして利用可能です。
ですから、これらすべてがどのように機能するのかについてもっと知りたい場合は、必ずそれをチェックしてください。
私たちは今週初めにSiriでフォローアップの質問に力を与えるためにこれらがどのように使われることができるかについてもっと多くをカバーしたセッションもありました。
ご参加ありがとうございました。
 【拍手】
